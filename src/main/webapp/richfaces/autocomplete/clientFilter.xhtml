<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets">

<ui:composition>
	<p>Except the server-side <b>"autocomplete"</b> method which could
	be used to collect suggestion strings according to entered prefix, <b>rich:autocomplete</b>
	allows to define similar method for filtering at client side. It should
	be defined using <b>clientFilterFunction</b> attribute which accepts
	custom filter function name. Function should accepts two parameters <b>subString</b>(current
	input value considering tokens) and <b>value</b>(currently iterated
	item value) and return boolean flag which means if the value satisfies
	the substring passed. The function will be called for every available
	suggestion in order to construct new list of suggestions.</p>
	<p>This sample shows how to change the client filtering to <b>"contains"</b>
	instead of <b>"startsWith"</b></p>
	<ui:include src="#{demoNavigator.sampleIncludeURI}" />
	<ui:include src="/templates/includes/source-view.xhtml">
		<ui:param name="src" value="#{demoNavigator.sampleIncludeURI}" />
		<ui:param name="sourceType" value="xhtml" />
		<ui:param name="openLabel" value="View Source" />
		<ui:param name="hideLabel" value="Hide Source" />
	</ui:include>
</ui:composition>

</html>