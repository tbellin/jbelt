<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets">

	<p>RichFaces provides set of functions for more convinient work
	with DOM tree and to use some server side expressions.</p>
	<p>Here is the current list:</p>
	<ul>
		<li><b>rich:clientId(id)</b> - returns client Id for component by
		it's short id.</li>
		<li><b>rich:element(id)</b> - returns DOM element for the passed
		short id</li>
		<li><b>rich:component(id)</b> - returns richfaces client
		component instance to call some API method.</li>
		<li><b>rich:isUserInRole(role)</b> - returns is the user has
		specified role.</li>
		<li><b>rich:findComponent(id)</b> - returns component instance
		for given short id</li>
	</ul>
	<p>For example the result of # {rich:element('input')} expression
	will be - document.getElementById('formId:input').</p>
	<p>And here is one more simple example. There is no need in Bean
	creation in order to store the value. It's picked from component
	instance by using rich:findComponent call.</p>

	<ui:include src="#{demoNavigator.sampleIncludeURI}" />
	<ui:include src="/templates/includes/source-view.xhtml">
		<ui:param name="src" value="#{demoNavigator.sampleIncludeURI}" />
		<ui:param name="sourceType" value="xhtml" />
		<ui:param name="openLabel" value="View Source" />
		<ui:param name="hideLabel" value="Hide Source" />
	</ui:include>

	<p>One more sample could be found at dataScroller API page. There
	are rich:component used for calling JS API of dataScroller.</p>
	<p>This set goes to be extended continously. Rise jira or forum
	requests if you have proposals on new useful functions.</p>
</ui:composition>